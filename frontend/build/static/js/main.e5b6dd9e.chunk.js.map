{"version":3,"sources":["coffees/CoffeeForm.tsx","coffees/CreateCoffee.tsx","coffees/ListCoffee.tsx","coffees/DetailCoffee.tsx","coffees/UpdateCoffee.tsx","App.tsx","index.tsx"],"names":["CoffeeForm","coffee","onSubmit","initialValues","flavour","validate","isSubmitting","type","name","placeholder","disabled","CreateCoffee","queryClient","useQueryClient","history","useHistory","createCoffee","useMutation","values","axios","post","onSuccess","invalidateQueries","setSubmitting","mutate","push","CoffeePreview","handleEdit","handleDelete","handleDetail","onClick","ListCoffees","coffeesQuery","useQuery","get","then","response","data","deleteCoffee","id","delete","length","map","DetailCoffee","useParams","isLoading","UpdateCoffee","updateCoffee","put","App","className","to","path","component","ListCoffee","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.e5b6dd9e.chunk.js","sourcesContent":["import React from 'react'\nimport { Formik, Field, Form, FormikHelpers } from 'formik'\nimport { Coffee } from '../types'\n\ntype CreateProps = {\n  coffee?: Coffee\n  onSubmit: (values: Coffee, helpers: FormikHelpers<Coffee>) => void\n}\n\nfunction CoffeeForm({ coffee, onSubmit }: CreateProps) {\n  const initialValues: Coffee = {\n    flavour: coffee ? coffee.flavour : '',\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validate={() => {\n        return {}\n      }}\n      onSubmit={onSubmit}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <Field type='text' name='flavour' placeholder='Flavour' />\n\n          <button type='submit' disabled={isSubmitting}>\n            Submit\n          </button>\n        </Form>\n      )}\n    </Formik>\n  )\n}\n\nexport default CoffeeForm\n","import axios from 'axios'\nimport { FormikHelpers } from 'formik'\nimport React from 'react'\nimport { useMutation, useQueryClient } from 'react-query'\nimport { Coffee, CoffeeError } from '../types'\nimport CoffeeForm from './CoffeeForm'\nimport { useHistory } from 'react-router-dom'\n\nfunction CreateCoffee() {\n  const queryClient = useQueryClient()\n  const history = useHistory()\n  const createCoffee = useMutation<Coffee, CoffeeError, Coffee>(\n    (values) => {\n      return axios.post('/api/v1/coffees', values)\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries('coffees')\n      },\n    }\n  )\n\n  const handleSubmit = (\n    values: Coffee,\n    { setSubmitting }: FormikHelpers<Coffee>\n  ) => {\n    createCoffee.mutate(values)\n    setSubmitting?.(false)\n    history.push('/coffees')\n  }\n\n  return <CoffeeForm onSubmit={handleSubmit} />\n}\n\nexport default CreateCoffee\n","import React from 'react'\nimport { useQueryClient, useQuery, useMutation } from 'react-query'\nimport axios from 'axios'\nimport { Coffee } from '../types'\nimport { useHistory } from 'react-router-dom'\n\ntype CoffeePreviewProps = {\n  coffee: Coffee\n  handleEdit: (coffee: Coffee) => void\n  handleDelete: (coffee: Coffee) => void\n  handleDetail: (coffee: Coffee) => void\n}\n\nfunction CoffeePreview({\n  coffee,\n  handleEdit,\n  handleDelete,\n  handleDetail,\n}: CoffeePreviewProps) {\n  return (\n    <>\n      {coffee.flavour}\n      <br />\n      <button type='button' onClick={() => handleDetail(coffee)}>\n        detail\n      </button>\n      <button type='button' onClick={() => handleEdit(coffee)}>\n        edit\n      </button>\n      <button type='button' onClick={() => handleDelete(coffee)}>\n        delete\n      </button>\n    </>\n  )\n}\n\nfunction ListCoffees() {\n  const history = useHistory()\n  const queryClient = useQueryClient() // eslint-disable-line no-unused-vars\n  const coffeesQuery = useQuery<Coffee[]>('coffees', () => {\n    return axios\n      .get('/api/v1/coffees')\n      .then((response) => response.data) as Promise<Coffee[]>\n  })\n\n  const deleteCoffee = useMutation<any, any, Partial<Coffee>>(\n    ({ id }) => {\n      return axios.delete(`/api/v1/coffees/${id}`)\n    },\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries('coffees')\n      },\n    }\n  )\n\n  const handleEdit = ({ id }: Coffee) => {\n    history.push(`/coffees/update/${id}`)\n  }\n\n  const handleDelete = ({ id }: Coffee) => {\n    deleteCoffee.mutate({ id })\n  }\n\n  const handleDetail = ({ id }: Coffee) => {\n    history.push(`/coffees/detail/${id}`)\n  }\n\n  return (\n    <>\n      <p>{coffeesQuery.data?.length} coffees</p>\n      <ul>\n        {coffeesQuery.data?.map((coffee) => (\n          <li key={coffee.id}>\n            <CoffeePreview\n              coffee={coffee}\n              handleDelete={handleDelete}\n              handleEdit={handleEdit}\n              handleDetail={handleDetail}\n            />\n          </li>\n        ))}\n      </ul>\n    </>\n  )\n}\n\nexport default ListCoffees\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport axios from 'axios'\nimport { useQuery } from 'react-query'\nimport { Coffee } from '../types'\n\nfunction DetailCoffee() {\n  const { id } = useParams<{ id: string }>()\n\n  const { data, isLoading } = useQuery<Coffee>(['coffees', id], () =>\n    axios.get(`/api/v1/coffees/${id}`).then((response) => response.data)\n  )\n\n  if (isLoading) {\n    return <div>Loading...</div>\n  }\n\n  const coffee = data as Coffee\n\n  return (\n    <div>\n      <label>{coffee.flavour}</label>\n      <br />\n    </div>\n  )\n}\n\nexport default DetailCoffee\n","import axios from 'axios'\nimport React from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport CoffeeForm from './CoffeeForm'\nimport { Coffee } from '../types'\nimport { useQuery, useMutation, useQueryClient } from 'react-query'\n\nfunction UpdateCoffee() {\n  const { id } = useParams<{ id: string }>()\n  const queryClient = useQueryClient()\n  const history = useHistory()\n\n  const { data, isLoading } = useQuery<Coffee>(['coffees', id], () =>\n    axios.get(`/api/v1/coffees/${id}`).then((response) => response.data)\n  )\n\n  const updateCoffee = useMutation<Coffee, any, Coffee>(\n    (values: Coffee) =>\n      axios\n        .put(`/api/v1/coffees/${id}`, values)\n        .then((response) => response.data),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries('coffees')\n      },\n    }\n  )\n\n  if (isLoading) {\n    return <div>Loading...</div>\n  }\n\n  const coffee = data as Coffee\n  return (\n    <CoffeeForm\n      coffee={coffee}\n      onSubmit={(values, { setSubmitting }) => {\n        updateCoffee.mutate(values)\n        setSubmitting?.(false)\n        history.push('/coffees')\n      }}\n    />\n  )\n}\n\nexport default UpdateCoffee\n","import React from 'react'\n\nimport CreateCoffee from './coffees/CreateCoffee'\nimport ListCoffee from './coffees/ListCoffee'\nimport DetailCoffee from './coffees/DetailCoffee'\nimport UpdateCoffee from './coffees/UpdateCoffee'\n\nimport { Route, Switch, BrowserRouter as Router, Link } from 'react-router-dom'\n\nimport { useQuery } from 'react-query'\n\nfunction App() {\n  return (\n    <Router>\n      <nav>\n        <ul className='flex'>\n          <li>\n            <Link to='/'>Home</Link>\n            <br />\n          </li>\n\n          <li className='ml-10'>\n            <Link to='/coffees'>Coffees</Link>\n            <br />\n            <Link to='/coffees/create'>Create a Coffee</Link>\n            <br />\n          </li>\n        </ul>\n      </nav>\n      <main>\n        <Route path='/coffees'>\n          <h1>Coffees</h1>\n        </Route>\n\n        <Switch>\n          {/* Coffee routes */}\n          <Route path='/coffees/create' component={CreateCoffee} />\n          <Route path='/coffees/update/:id' component={UpdateCoffee} />\n          <Route path='/coffees/detail/:id' component={DetailCoffee} />\n          <Route path='/coffees' component={ListCoffee} />\n        </Switch>\n      </main>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { QueryClient, QueryClientProvider } from 'react-query'\n\nconst queryClient = new QueryClient()\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}